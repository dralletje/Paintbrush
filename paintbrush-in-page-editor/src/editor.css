/* @import url("https://fonts.googleapis.com/css?family=Roboto+Mono:400,400i,500,700&display=swap&subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext"); */
@import url("https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.4.5/400.css");
@import url("https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.4.5/400-italic.css");
@import url("https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.4.5/500.css");
@import url("https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.4.5/700.css");

@import url("./dark_color.css");

/* VARIABLES */

:root {
  --pluto-cell-spacing: 17px;
  /* use the value "contextual" to enable contextual ligatures `document.documentElement.style.setProperty('--pluto-operator-ligatures', 'contextual');`
        for julia mono see here: https://cormullion.github.io/pages/2020-07-26-JuliaMono/#contextual_and_stylistic_alternates_and_ligatures */
  --pluto-operator-ligatures: none;
  --julia-mono-font-stack: JuliaMono, Menlo, "Roboto Mono",
    "Lucida Sans Typewriter", "Source Code Pro", monospace;
  --sans-serif-font-stack: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  --lato-ui-font-stack: "Lato", -apple-system, BlinkMacSystemFont, "Segoe UI",
    Roboto, Oxygen-Sans, Cantarell, Helvetica, Arial, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", system-ui, sans-serif;

  /* color-scheme: light dark; */
}

/* GENERAL PAGE LAYOUT */
/* html {
  font-size: 17px;
} */

* {
  box-sizing: border-box;
}

/* body {
  overscroll-behavior: contain;
  margin: 0px;
  overflow-anchor: none;
  overflow-x: hidden;
  position: relative;
  min-height: 100vh;
} */

pluto-editor {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 0;
}

main {
  flex: 1;

  max-width: calc(700px + 25px + 6px); /* 700px + both paddings */
  padding-top: 0px;
  padding-bottom: 4rem;
  padding-left: 25px;
  padding-right: 6px;
  align-content: center;
  width: 100%;
}

body:not(.disable_ui) main {
  padding-bottom: 16rem;
}

body:not(.disable_ui) {
  overscroll-behavior-x: contain;
}

/* | main=25px+700px+6px=731px | pluto-helpbox=350px - 500px | */
/* min-width: 731px+ */

/* CAN WE HAVE CONTAINER QUERIES PLESSSSS */
@media screen and (min-width: calc(700px + 25px + 6px)) and (max-width: calc(700px + 25px + 6px + 500px)) {
  body:not(.disable_ui) pluto-editor.fullscreen main {
    margin-left: 0px;
    align-self: flex-start;
  }
}
@media screen and (min-width: calc(700px + 25px + 6px + 500px)) and (max-width: calc(700px + 25px + 6px + 500px + 500px)) {
  body:not(.disable_ui) pluto-editor.fullscreen main {
    margin-right: 500px;
    align-self: flex-end;
  }
}

pluto-notebook {
  display: block;
  background: var(--main-bg-color);
}

kbd {
  font-family: "Space Mono", monospace;
  font-size: 0.7rem;
  letter-spacing: -0.7px;
  border: 1px solid var(--kbd-border-color);
  padding: 0px 5px;
  border-radius: 3px;
}

body.binder header#pluto-nav > nav#at_the_top > pluto-filepicker > * {
  display: none;
}
body.binder header#pluto-nav > nav#at_the_top > pluto-filepicker > a {
  display: block;
  font-size: 16px;
  font-family: var(--julia-mono-font-stack);
  opacity: 0.8;
  text-decoration: none;
}

body.nbpkg_restart_recommended header#pluto-nav,
body.nbpkg_restart_required header#pluto-nav,
body.binder.loading header#pluto-nav,
body.process_dead header#pluto-nav,
body.disconnected header#pluto-nav {
  position: sticky;
  top: 0;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

body.nbpkg_restart_recommended header#pluto-nav {
  background-color: var(--restart-recc-header-color);
}
body.nbpkg_restart_required header#pluto-nav {
  background-color: var(--restart-req-header-color);
}
body.process_dead header#pluto-nav {
  background-color: var(--dead-process-header-color);
}
body.loading header#pluto-nav {
  background-color: var(--loading-header-color);
}
body.disconnected header#pluto-nav {
  background-color: var(--disconnected-header-color);
}
body.binder.loading header#pluto-nav {
  background-color: var(--binder-loading-header-color);
}

nav#at_the_top > #process_status {
  font-size: 1rem;
  font-weight: 500;
  padding: 5px 10px;
  margin: 5px;
  background: var(--nav-process-status-bg-color);
  color: var(--nav-process-status-color);
  border-radius: 10px;
  z-index: 10;
  margin-left: 1em;
}

nav#at_the_top > #process_status:empty {
  display: none;
}

loading-bar {
  height: 6px;
  width: 10vw;
  /* background-color: #b1c9dd; */
  background: linear-gradient(
    90deg,
    var(--loading-grad-color-1),
    var(--loading-grad-color-2),
    var(--loading-grad-color-1)
  );
  background-size: 100vw 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  display: block;
  transition: width cubic-bezier(0.14, 0.71, 0, 0.99) 2s, opacity linear 0.2s;
  opacity: 0;
  z-index: 12000;
  animation: move-background 2s ease-in-out infinite;
}
loading-bar.slow {
  transition: width cubic-bezier(0.14, 0.71, 0, 0.99) 10s, opacity linear 0.5s;
}
@media (prefers-reduced-motion) {
  loading-bar {
    transition: none;
  }
}

body.binder.loading #binder_spinners {
  opacity: 0.25;
}

@keyframes move-background {
  0% {
    background-position-x: 0vw;
  }
  100% {
    background-position-x: 100vw;
  }
}

.outline-frame {
  z-index: 9990;
  pointer-events: none;
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  /* outline: red inset 15px; */
  box-sizing: border-box;
}

body.recording_waiting_to_start .outline-frame.recording {
  border: 12px solid #be6f6fba;
}
body.is_recording .outline-frame.recording {
  border: 12px solid #dc3535ba;
}
.outline-frame.playback {
  opacity: 1;
  position: absolute;
  transition: top 0.3s ease-in-out, opacity 0.3s ease-in-out;
  border: 12px solid #357ddcba;
  /* background: #7b77ff12; */
  box-shadow: inset 0px 0px 20px 20px #919bff2b;
}

body.recording_waiting_to_start header#pluto-nav,
body.is_recording header#pluto-nav {
  display: none;
}

#record-ui-container {
  position: fixed;
  top: 3px;
  z-index: 9999;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

#record-ui-container > .overlay-button {
  /* background: pink; */
  border-color: #e86f6c;
  margin: 0 3px;
}
#record-ui-container > .overlay-button.record-no-audio {
  border-color: #dcc6c6;
}
#record-ui-container > .overlay-button.playback {
  border-color: #c6c6dc;
}
#record-ui-container span.stop-recording-icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/stop-circle-outline.svg");
}
#record-ui-container span.microphone-icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/mic-outline.svg");
}
#record-ui-container span.mute-icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/mic-off-outline.svg");
}
#record-ui-container span.follow-recording-icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/arrow-undo-outline.svg");
}

div.recording-playback {
  width: min(500px, 90vw);
  position: fixed;
  bottom: 16px;
  z-index: 9999;
}
div.recording-playback audio {
  width: 100%;
}

/* PREAMBLE */

.raw-html-wrapper.preamble {
  width: 100%;
}

main > preamble {
  display: flex;
  height: 20px;
  position: sticky;
  top: 5px;
  margin-top: 5px;
  padding-right: 5px;
  z-index: 200;
  pointer-events: none;
}

.overlay-button {
  background: var(--overlay-button-bg);
  color: var(--overlay-button-color);
  padding: 5px 8px;
  border: 3px solid var(--overlay-button-border);
  border-radius: 12px;
  height: 35px;
  font-family: "Segoe UI Emoji", "Roboto Mono", monospace;
  font-size: 0.75rem;
  pointer-events: all;
  /* break-inside: avoid; */
  white-space: nowrap;
}
.overlay-button button:not(.asdfdsf) {
  color: var(--overlay-button-color);
}

main > preamble #saveall-container {
  margin-left: auto;
}
pluto-editor.fullscreen main > preamble #saveall-container {
  transform: translateX(max(0px, 100vw - 700px - 25px));
  /* position: relative; */
}

@media screen and (min-width: calc(700px + 25px + 6px + 500px)) {
  pluto-editor.fullscreen main > preamble #saveall-container {
    transform: translateX(500px);
  }
}

main > preamble #saveall-container.ask_to_save {
  border-color: var(--overlay-button-border-save);
}
main > preamble #saveall-container.saving,
main > preamble #saveall-container.saved {
  border-color: transparent;
}

main > preamble #saveall-container.saving > span,
main > preamble #saveall-container.saved > span {
  opacity: 0.5;
}

.overlay-button span.pluto-icon::after {
  content: "";
  display: inline-block;
  padding-right: 20px;
  /* width: 17px; */
  height: 18px;
  margin-bottom: -5px;
  background-size: 17px 17px;
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/sync-circle-outline.svg");
  background-repeat: no-repeat;
  background-position-x: right;
  background-position-y: 1px;
  filter: var(--image-filters);
}

main > preamble span.saved-icon::after,
.overlay-button span.saved-icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/checkmark-outline.svg");
  filter: var(--image-filters);
}

#saveall-container .only-on-hover {
  display: none;
}
#saveall-container:hover .only-on-hover {
  display: inline;
}

/* body:not(.code_differs) > main > preamble #saveall-container {
    display: none;
} */

/* CELL */

pluto-cell {
  display: block;
  /* CodeMirror line height (defined by their JS somehow) + 1px border top + 1px border bottom */
  min-height: calc(23px + 1px + 1px);
  margin-top: var(--pluto-cell-spacing);
  position: relative;
  break-inside: avoid;
}

pluto-output {
  display: block;
  padding-left: 10px;
  padding-right: 10px;
  align-items: baseline;
  overflow-x: auto;
  background-color: var(--pluto-output-bg-color);
}

.scroll_y {
  overflow-y: auto;
  max-height: 80vh;
}

pluto-output:focus {
  outline: none;
}

pluto-output:not(.rich_output) {
  display: flex;
  flex-wrap: wrap;
  padding-top: 3px;
  padding-bottom: 3px;
}

pluto-output > assignee {
  font-family: var(--julia-mono-font-stack);
  font-size: 0.75rem;
  font-variant-ligatures: none;
}

pluto-output > assignee::after {
  content: "\a0=\a0";
  opacity: 0.6;
}

pluto-output > assignee:empty {
  display: none;
}

pluto-output > div {
  flex-shrink: 0;
  overflow-y: hidden;
}

pluto-output div.raw-html-wrapper {
  display: contents;
}

pluto-output:not(.rich_output) > div > pre {
  display: flex;
}

/* as embedded display: */

pluto-display {
  display: contents;
}
pluto-display > div {
  display: contents;
}

/* isolated cell view */
.isolated-cell > pluto-output {
  padding: 0;
}
.hidden-cell {
  display: none;
}

/* DISABLED CELLS */

pluto-cell.depends_on_disabled_cells > pluto-output,
pluto-cell.running_disabled > pluto-output,
pluto-cell.depends_on_disabled_cells > pluto-trafficlight,
pluto-cell.running_disabled > pluto-trafficlight,
pluto-cell.depends_on_disabled_cells > pluto-input .cm-editor,
pluto-cell.running_disabled > pluto-input .cm-editor,
pluto-cell.depends_on_disabled_cells > pluto-logs-container,
pluto-cell.running_disabled > pluto-logs-container {
  opacity: 0.3;
}

pluto-cell.running_disabled > pluto-input .cm-editor,
pluto-cell.running_disabled > pluto-output {
  background-color: var(--disabled-cell-bg-color);
}

/* SELECTION */

pluto-cell.selected {
  background: var(--selected-cell-bg-color);
  /* border-radius: 0 3px 3px 0; */
}

pluto-cell.selected > pluto-input > div.cm-editor,
pluto-cell.selected > pluto-output {
  opacity: 0.7;
}

main {
  cursor: vertical-text;
}
pluto-cell {
  cursor: auto;
}

/* SCROLLBAR FIREFOX */

pluto-output > div {
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
}

pluto-cell:hover > pluto-output > div {
  scrollbar-color: var(--hover-scrollbar-color-1) var(--hover-scrollbar-color-2);
}

/* SCROLLBAR CHROME */

pluto-output > div::-webkit-scrollbar {
  height: 6px;
  background: transparent;
}

pluto-output > div::-webkit-scrollbar-thumb {
  background: transparent;
}

pluto-cell:hover > pluto-output > div::-webkit-scrollbar {
  background: var(--hover-scrollbar-color-2);
}

pluto-cell:hover > pluto-output > div::-webkit-scrollbar-thumb {
  background: var(--hover-scrollbar-color-1);
}

/* CELL INPUT */

pluto-input .cm-editor {
  z-index: 20;
  border-bottom-right-radius: 4px;
  border: 1px solid var(--normal-cell-color);
  border-left: none;
  transition: border-color 0.15s ease-in-out;

  /* Make sure that scrolling an editor into view gives some breathing room */
  scroll-margin-block: 20vh;
  min-height: 25px;
}
pluto-input:focus-within .cm-editor {
  /* z-index increased by 1 to make sure that the autocomplete window shows above all other editors, see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context */
  z-index: 21;
}

pluto-input .cm-editor .cm-line {
  transition: background-color 0.15s ease-in-out;
}

pluto-input .cm-editor .cm-line.cm-highlighted-line {
  background-color: #bdbdbd68;
  border-radius: 3px;
}

pluto-cell:not(.show_input) > pluto-input {
  display: none;
}

pluto-cell.code_differs > pluto-input > .cm-editor {
  border: 1px solid var(--code-differs-cell-color);
  border-left: none;
}

/* UI */

.overlay-button button,
pluto-cell > button,
pluto-input > button,
pluto-runarea > button,
pluto-shoulder > button,
nav#slide_controls > button {
  position: absolute;
  margin: 0px;
  padding: 1px;
  opacity: 50%;
  border: none;
  background: none;
  cursor: pointer;
  /* color: hsl(204, 86%, 35%); */
  color: var(--ui-button-color);
  font-family: "Segoe UI Emoji", "Roboto Mono", monospace;
  font-size: 0.75rem;
  z-index: 30;
  /* CodeMirror is 2 */
}

.overlay-button button {
  position: relative;
}

/* CELL SHOULDER */

pluto-shoulder {
  position: absolute;
  /* top: 0px; */
  /* bottom: 0px; */
  --invisible-border: calc(0.5 * var(--pluto-cell-spacing));
  --shoulder-width: calc(28px + var(--invisible-border));
  /* --border-radius: calc(5px + var(--invisible-border)); */
  --border-radius: 0px;

  left: calc(0px - var(--shoulder-width));
  width: var(--shoulder-width);
  border-radius: var(--border-radius) 0px 0px var(--border-radius);
  cursor: move;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: flex-start;
  /* Add an invisible border around the shoulder, to make it easier to click on. (The area between two cells is divided in two, each half belongs to the closest pluto-cell.) */
  top: calc(0px - var(--invisible-border));
  bottom: calc(0px - var(--invisible-border));
  border: var(--invisible-border) solid rgba(0, 0, 0, 0);
  border-right: none;
}
pluto-editor.fullscreen pluto-shoulder {
  --shoulder-width: 2000px;
}

pluto-shoulder:hover {
  background: var(--shoulder-hover-bg-color);
  background-clip: padding-box;
}

pluto-shoulder > button {
  flex: 0 0 auto;
  position: sticky;
  top: 0px;
  margin-top: 4px;
  margin-right: 5px;
  padding: 0px 1px;
}

pluto-cell:focus-within > pluto-shoulder > button {
  /* we use padding instead of 4px extra margin to move the eye to the left so that the hitbox becomes grows - you want to be able to double click the button */
  padding-right: 4px;
}

/* pluto-cell.code_folded.inline-output > pluto-shoulder > button {
    margin-top: 3px;
} */

pluto-shoulder > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/eye-outline.svg");
  filter: var(--image-filters);
}

pluto-cell.code_folded > pluto-shoulder > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/eye-off-outline.svg");
  filter: var(--image-filters);
}

/* TRAFFIC LIGHT */

pluto-trafficlight {
  /* --patternHeight is derived from the pattern length (16px) div sin(45deg) = 16px * sqrt(2)  */
  --patternHeight: 22.62741699797px;
  box-sizing: content-box;
  margin-right: -1px; /* fix a visual glitch of imperfect alignment */
  width: 4px;
  position: absolute;
  left: -4px;
  top: 0px;
  bottom: 0px;
  pointer-events: none;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  border-left-color: var(--normal-cell-color);
  background: var(--normal-cell-color);
  overflow: hidden;
}

pluto-trafficlight::after {
  content: "";
  /* Calc needs units everywhere to work */
  top: calc(0px - 10 * var(--patternHeight));
  left: 0;
  width: 100%;
  height: calc(100% + 10 * var(--patternHeight));
  position: absolute;
  opacity: 0;
}

/*
 * This class will toggle animation.
 * Other classes will make animation visible with opacity (which is CHEAP?)
 * 
 */
pluto-cell.activate_animation pluto-trafficlight::after {
  animation: 10s linear 0s infinite running scrollbackground;
}

/* in ascending order of severity: */
/* we need the :not(.___) to fix our CSS selector specificity when `body.disable_ui` */
body:not(.___) pluto-cell.code_folded > pluto-trafficlight {
  background: none;
}

@media screen and (any-pointer: fine) {
  body:not(.disable_ui) pluto-cell:hover > pluto-trafficlight {
    background: var(--normal-cell-color);
    transition: background 0.05s ease-in;
  }
}

body:not(.___) pluto-cell:focus-within > pluto-trafficlight {
  border-left-width: 4px;
  border-left-style: solid;
  margin-left: -4px;
  background-clip: padding-box;
  background-color: var(--normal-cell-color);
}

body:not(.___) pluto-cell.selected > pluto-trafficlight {
  background: var(--selected-cell-color);
  border-left-color: var(--selected-cell-color);
  background-clip: padding-box;
}

body:not(.___) pluto-cell.code_differs > pluto-trafficlight {
  background: var(--code-differs-cell-color);
  border-left-color: var(--code-differs-cell-color);
  background-clip: padding-box;
}

body:not(.___) pluto-cell.errored > pluto-trafficlight {
  background: var(--error-cell-color);
  border-left-color: var(--error-cell-color);
  background-clip: padding-box;
}

body:not(.___) pluto-cell.queued > pluto-trafficlight::after {
  background: repeating-linear-gradient(
    -45deg,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 0) 8px,
    var(--normal-cell-color) 8px,
    var(--normal-cell-color) 16px
  );
  background-clip: padding-box;
  /* [1]
    Queued, Running, Errored are really fast changing props.
    We make sure to on-off the gradients with opacity and not toggle the animation
    (Which is running all this time)
    Make sure the browser won't skip creating a stacking context
    https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
    https://www.w3.org/TR/css-color-3/#transparency
    */
  opacity: 0.99;
  background-size: 4px var(--patternHeight);
  animation-duration: 20s;
}

body:not(.___) pluto-cell.running > pluto-trafficlight::after {
  background: repeating-linear-gradient(
    -45deg,
    var(--normal-cell-color),
    var(--normal-cell-color) 8px,
    var(--dark-normal-cell-color) 8px,
    var(--dark-normal-cell-color) 16px
  );
  background-clip: content-box;
  opacity: 0.99; /* [1] */
  background-size: 4px var(--patternHeight);
}

body:not(.___) pluto-cell.queued.errored > pluto-trafficlight::after {
  background: repeating-linear-gradient(
    -45deg,
    var(--light-error-cell-color),
    var(--light-error-cell-color) 8px,
    var(--bright-error-cell-color) 8px,
    var(--bright-error-cell-color) 16px
  );
  background-clip: content-box;
  opacity: 0.99; /* [1] */
  background-size: 4px var(--patternHeight); /* 16 * sqrt(2) */
}

body:not(.___) pluto-cell.running.errored > pluto-trafficlight::after {
  background: repeating-linear-gradient(
    -45deg,
    var(--light-error-cell-color),
    var(--light-error-cell-color) 8px,
    var(--bright-error-cell-color) 8px,
    var(--bright-error-cell-color) 16px
  );
  background-clip: content-box;
  opacity: 0.99; /* [1] */
  background-size: 4px var(--patternHeight); /* 16 * sqrt(2) */
}

/* Define --patternHeight for this keyframes animation to work! */
@keyframes scrollbackground {
  0% {
    transform: translate(0px, 0px);
  }
  100% {
    transform: translate(0, calc(10 * var(--patternHeight)));
  }
}

/* BUTTONS */

pluto-cell > button > span,
pluto-input > button > span {
  pointer-events: none;
}

@media screen and (any-pointer: fine) {
  pluto-cell > button,
  pluto-input > button,
  pluto-runarea > button,
  pluto-shoulder > button,
  pluto-cell > pluto-runarea {
    opacity: 0;
    /* to make it feel smooth: */
    transition: opacity 0.25s ease-in-out;
  }
  button.toggle_export,
  button.start_stop_recording,
  pluto-cell:hover > button,
  pluto-cell:hover > pluto-input > button,
  pluto-cell > pluto-runarea > button,
  pluto-cell:hover > pluto-shoulder > button {
    opacity: 0.4;
    transition: opacity 0.25s ease-in-out;
  }
  button.toggle_export:hover,
  button.start_stop_recording:hover,
  .overlay-button button:hover,
  pluto-cell > button:hover,
  pluto-cell > pluto-input > button:hover,
  pluto-cell > pluto-runarea > button:hover,
  pluto-cell > pluto-shoulder > button:hover,
  pluto-cell:hover > pluto-runarea {
    opacity: 1;
    /* to make it feel snappy: */
    transition: opacity 0.05s ease-in-out;
  }
}

@media screen and (any-pointer: coarse) {
  pluto-cell > button,
  pluto-cell > pluto-runarea {
    opacity: 0;
    /* to make it feel smooth: */
    transition: opacity 0.25s ease-in-out;
  }
  pluto-input > button,
  pluto-shoulder > button {
    opacity: 0.25;
    transition: opacity 0.25s ease-in-out;
  }
  pluto-cell:focus-within > button,
  pluto-cell:focus-within > pluto-input > button,
  pluto-cell:focus-within > pluto-runarea,
  pluto-cell:focus-within > pluto-shoulder > button {
    opacity: 0.25;
    transition: opacity 0.25s ease-in-out;
  }
  pluto-cell > pluto-input > button:focus-within,
  pluto-cell > button:focus-within,
  pluto-cell
    > pluto-input
    > button:focus-within
    pluto-cell
    > pluto-runarea
    > button:focus-within,
  pluto-cell > pluto-shoulder > button:focus-within,
  pluto-cell > pluto-runarea {
    opacity: 1;
    /* to make it feel snappy: */
    transition: opacity 0.05s ease-in-out;
  }
}

pluto-cell > button > span::after,
pluto-input > button > span::after,
pluto-runarea > button > span::after,
pluto-shoulder > button > span::after {
  display: block;
  content: " " !important;
  background-size: 17px 17px;
  height: 17px;
  width: 17px;
}

pluto-cell > button.add_cell {
  left: -12px;
}

pluto-cell > button.add_cell.before {
  margin-top: calc(-19px - 0.5 * (var(--pluto-cell-spacing) - 19px)) !important;
}

pluto-cell > button.add_cell.after {
  bottom: 1px;
  margin-bottom: calc(-20px - 0.5 * (var(--pluto-cell-spacing) - 19px));
}

pluto-cell > button.add_cell > span::after {
  /* background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/add-circle-outline.svg"); */
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/add-outline.svg");
  filter: var(--image-filters);
}
pluto-input > button.input_context_menu ul {
  --width: 156px;
  left: 100%;
  top: -8px;
  margin: 0;
  padding: 0px;
  border-radius: 6px;
  display: block;
  position: absolute;
  border: 1px solid var(--input-context-menu-border-color);
  background-color: var(--input-context-menu-bg-color);
}
@media screen and (min-width: 921px) {
  pluto-input > button.input_context_menu ul {
    left: calc(100% - 3px);
  }
}
@media screen and (max-width: 920px) {
  pluto-input > button.input_context_menu {
    z-index: 31;
  }
  pluto-input > button.input_context_menu ul {
    left: calc(100% - var(--width) - 36px);
  }
}
.input_context_menu li {
  font-family: "Roboto Mono", system-ui;
  font-size: 0.8rem;
  margin-block-end: 0px;
  letter-spacing: -0.02em;
  color: var(--input-context-menu-li-color);
  position: relative;
  list-style: none;
  padding: 8px;
  width: var(--width);
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  border-radius: 2px;
}
.input_context_menu li:last-child {
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}
.input_context_menu li:first-child {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}

.input_context_menu li.coming_soon {
  color: var(--input-context-menu-soon-color);
}
.input_context_menu li.coming_soon:hover {
  cursor: not-allowed;
  background-color: var(--input-context-menu-hover-bg-color);
}

.input_context_menu li:hover {
  transition-property: background-color;
  transition-duration: 200ms;
  background-color: var(--input-context-menu-hover-bg-color);
}

.ctx_icon,
.icon {
  --size: 17px;
  width: var(--size);
  height: var(--size);
  margin-top: 1px;
  background-size: var(--size) var(--size);
  background-position: center;
  margin-right: calc(var(--size) / 3);
}

.ctx_icon {
  filter: var(--image-filters);
}
.ctx_icon.show_logs {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/document-text-outline.svg");
}

.ctx_icon.hide_logs {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/document-text-outline.svg");
}

.ctx_icon.bandage {
  filter: var(--image-filters) opacity(0.3);
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/bandage-outline.svg");
}
.ctx_icon.enable_cell {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/caret-forward-circle-outline.svg");
}

.ctx_icon.disable_cell {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/ban-outline.svg");
  background-size: 15px;
  background-repeat: no-repeat;
}
.ctx_icon.delete {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/close-circle-outline.svg");
}

pluto-input > button.input_context_menu {
  /* top: 3px; */
  /* left: -26px; */
  right: 0px;
  padding: 5px;
}

pluto-input > button.input_context_menu.open {
  opacity: 1;
}

pluto-input > button.input_context_menu > span.icon::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/ellipsis-horizontal-circle-outline.svg");
  filter: var(--image-filters);
}

/* PKG UI */

body.nbpkg_disabled pkg-status-mark:not(.disable_pkg) {
  display: none;
}

pkg-status-mark {
  width: 1em;
  height: 1em;
  margin: 0px 0.6em 0px 0.2em;
  display: inline-block;
}

pkg-status-mark > button {
  margin: 0px;
  padding: 0px;
  border: none;
  background: none;
  cursor: context-menu;
  position: relative;
  top: -0.2em;

  /* background: rgba(127, 176, 76, 0.24);
    border: 3px solid rgba(84, 182, 237, 0);
    border-radius: 5px; */
}

pkg-status-mark > button > span::after {
  display: inline-block;
  content: " " !important;
  background-size: 1.5em;
  height: 1.5em;
  width: 1.5em;

  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/time-outline.svg");
  opacity: 0.3;
  filter: var(--image-filters);
}

pkg-status-mark.installed > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/checkmark-outline.svg");
  /* background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/cloud-done-outline.svg"); */
  filter: var(--image-filters);
}
pkg-status-mark.busy > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/sync-outline.svg");
  animation: loadspin 3s ease-in-out infinite;
  filter: var(--image-filters);
}
pkg-status-mark.not_found > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/cloud-offline-outline.svg");
  opacity: 0.6;
  filter: var(--image-filters);
}
pkg-status-mark.will_be_installed > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/cloud-download-outline.svg");
  opacity: 0.6;
  filter: var(--image-filters);
}
pkg-status-mark.disable_pkg > button > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/chatbox-ellipses-outline.svg");
  opacity: 0.6;
  filter: var(--image-filters);
}

pluto-popup {
  display: block;
  position: absolute;
  z-index: 50;
  /* left: 1.5em; */
  /* top: calc((1.5em - 200px) * 0.5); */
  width: min(90vw, 251px);
  /* min-height: 80px; */
  margin-left: 0.4rem;
  margin-top: 0px;
  margin-top: -1rem;
  /* margin-top: calc(0.5 * (1rem - 80px)); */
  overflow-wrap: break-word;
  font-family: var(--lato-ui-font-stack);
  opacity: 0;
  transform: scale(0.2);
  transform-origin: left;
  transition: transform 0.5s ease-in-out, opacity 0.1s ease-in-out;
  pointer-events: none;
}

pluto-popup.visible {
  opacity: 1;
  transform: scale(1);
  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
  pointer-events: initial;
}

pluto-popup > * {
  display: block;
  background: var(--overlay-button-bg);
  border: 3px solid var(--overlay-button-border);
  color: var(--black);
  border-radius: 10px;
  padding: 8px;
  /* Slightly changes the layout of the three pkg buttons... in just the way that we want it! */
  position: absolute;
}
pluto-popup > pkg-popup {
  background: var(--pkg-popup-bg);
  border: 3px solid var(--pkg-popup-border-color);
}

pkg-popup.busy {
  border: 3px solid hsl(282deg 31% 62%);
}

pkg-version {
  font-family: "Space Mono", monospace;
  font-size: 0.75rem;
  opacity: 0.5;
}

pkg-popup .pkg-buttons {
  float: right;
  /* position: absolute; */
  /* right: 0px; */
  /* bottom: 0px; */
  display: inline-flex;
  height: 1em;
  flex-direction: row;
}

a.stdout-info img,
pkg-popup .pkg-buttons img {
  filter: var(--image-filters);
}

a.stdout-info,
pkg-popup .pkg-buttons > * {
  display: block;
  height: 17px;
  padding: 4px;
  box-sizing: content-box;
  background: var(--pkg-popup-buttons-bg-color);
  border-radius: 10px;
  z-index: 52;
  margin-left: -4px;
}

pkg-popup .toggle-terminal {
  right: 20px;
}

pkg-terminal {
  display: block;
  /* width: 20rem; */
  cursor: text;
  margin-top: 6px;
  background: var(--pkg-terminal-bg-color);
  color: white;
  border-radius: 6px;
  border: 3px solid var(--pkg-terminal-border-color);
  padding: 3px;
}

pkg-terminal > .scroller {
  max-height: 10rem;
  overflow-y: auto;
  padding: 4px;
  width: 100%;
}

pkg-terminal pre {
  white-space: pre-wrap;
  word-break: break-all;
  font-size: 0.6rem;
  font-family: "Space Mono", monospace;
  margin: 0;
}

pkg-popup pkg-terminal {
  display: none;
}

pkg-popup.showterminal pkg-terminal {
  display: block;
}

@keyframes loadspin {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(180deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* RUNAREA */

pluto-runarea {
  margin-right: 3px;
  display: block;
  height: 17px;
  position: absolute;
  right: 0px;
  min-width: 75px;
  background-color: var(--pluto-runarea-bg-color);
  /* border: 2px solid hsla(0, 0%, 0%, 0.1); */
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top: none;
}

pluto-runarea > span {
  display: inline-block;
  position: absolute;
  top: 1px;
  left: 22px;
  width: 45px;

  font-family: "Roboto Mono", monospace;
  font-size: 0.6em;
  font-style: italic;
  color: var(--pluto-runarea-span-color);
  text-align: center;
}

pluto-runarea > button.runcell {
  top: -1px;
  left: 1px;
}

pluto-runarea > button.runcell > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/caret-forward-circle-outline.svg");
  filter: var(--image-filters);
}

pluto-runarea.interrupt > button.runcell > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/stop-circle-outline.svg");
  filter: var(--image-filters);
}

pluto-runarea.jump > button.runcell > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/arrow-redo-circle-outline.svg");
  filter: var(--image-filters);
}
pluto-runarea.save > button.runcell > span::after {
  background-image: url("https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.5.1/src/svg/chevron-forward-circle-outline.svg");
  filter: var(--image-filters);
}

pluto-cell:not(.show_input) > pluto-runarea {
  display: none;
}

pluto-cell:focus-within > pluto-runarea,
pluto-cell.code_differs > pluto-runarea {
  opacity: 100%;
}

pluto-cell.code_differs > pluto-runarea > button {
  animation-name: 👀;
  animation-duration: 4s;
  animation-iteration-count: infinite;
}

@keyframes 👀 {
  0%,
  80%,
  100% {
    transform: scale(1);
    opacity: 50%;
  }
  90% {
    transform: scale(1.2);
    opacity: 100%;
  }
}

/* DRAG DROP */

dropruler {
  position: absolute;
  display: none;
  left: 0px;
  right: 0px;
  height: 4px;
  margin-top: calc(-2px - 0.5 * var(--pluto-cell-spacing));
  background: var(--dropruler-bg-color);
}

/* CODEMIRROR HINTS */

.cm-editor .cm-tooltip {
  border: 1px solid var(--cm-editor-tooltip-border-color);
  box-shadow: 3px 3px 4px rgb(0 0 0 / 20%);
  border-radius: 4px;
}

.cm-tooltip-autocomplete {
  max-height: calc(20 * 16px);
  box-sizing: content-box;
  z-index: 100;
}

.cm-tooltip.cm-completionInfo.cm-completionInfo-right:empty {
  /* https://github.com/codemirror/codemirror.next/issues/574 */
  display: none;
}

.cm-editor .cm-tooltip.cm-tooltip-autocomplete > ul > li {
  /* this is the line height rounded to an integer to prevent jiggle */
  height: 16px;
  overflow-y: hidden;
  /* font-size: 16px; */
  line-height: 16px;
  border-radius: 3px;
}
pluto-input .cm-editor .cm-tooltip.cm-tooltip-autocomplete > ul > li {
  height: unset;
}

.cm-editor .cm-tooltip.cm-tooltip-autocomplete > ul > li[aria-selected] {
  color: var(--cm-editor-li-aria-selected-color);
  background: var(--cm-editor-li-aria-selected-bg-color);
}
.cm-editor
  .cm-tooltip.cm-tooltip-autocomplete
  > ul
  > li[aria-selected]
  .cm-completionLabel {
  border-color: transparent;
}

.cm-editor .cm-tooltip.cm-tooltip-autocomplete li.c_notexported {
  color: var(--cm-editor-li-notexported-color);
}

.cm-editor .cm-completionIcon {
  opacity: 1;
  width: 1em;
  transform: translateY(-1.5px);
}

.cm-completionIcon::before {
  /* TODO This loses all color when it's not font-family: JuliaMono, which can happen */
  content: "⚫";
  font-family: var(--julia-mono-font-stack) !important;
  color: transparent;
  font-size: 0.75rem;
  margin-right: 0.5em;
  opacity: 1;
}

/* CODEMIRROR STYLE */

/*
Based on "Paraíso (Light)" by Jan T. Sott:
    Color scheme by Jan T. Sott (https://github.com/idleberg/Paraiso-CodeMirror)
    Inspired by the art of Rubens LP (http://www.rubenslp.com.br)
*/

[data-pluto-variable] {
  /* text-decoration-thickness: 3px; */
  font-weight: inherit;
}

[data-pluto-variable],
.cm-editor
  .cm-tooltip.cm-tooltip-autocomplete
  li.c_from_notebook
  .cm-completionLabel {
  font-weight: bold;
  text-decoration: underline;
  text-decoration-color: #ced2ef;
  text-decoration-thickness: 3px;
  text-decoration-skip-ink: none;
}

@media (prefers-color-scheme: dark) {
  [data-pluto-variable] {
    text-decoration-color: #5d5f70;
  }
}

[data-ctrl-down="true"][data-pluto-variable],
[data-ctrl-down="true"][data-cell-variable] {
  text-decoration-color: #d177e6;
  cursor: pointer;
}
[data-ctrl-down="true"][data-pluto-variable]:hover,
[data-ctrl-down="true"][data-pluto-variable]:hover * {
  /* This basically `color: #af5bc3`, but it works for emoji too!! */
  color: transparent !important;
  text-shadow: 0 0 #af5bc3;
}

/* Variable that is declared in the same cell */
[data-cell-variable] {
  /* Can give this cool styles later as well, but not for now nahhh */
  text-decoration: none;
}
[data-ctrl-down="true"][data-cell-variable]:hover * {
  /* This basically `color: #af5bc3`, but it works for emoji too!! */
  color: transparent !important;
  text-shadow: 0 0 #af5bc3;
}

.cm-tooltip.cm-tooltip-autocomplete {
  padding: 0;
  margin-left: -1.5em;
  background: var(--autocomplete-menu-bg-color);
}

pluto-input .cm-editor .cm-content,
pluto-input .cm-editor .cm-scroller,
.cm-editor .cm-tooltip-autocomplete .cm-completionLabel {
  font-family: var(--julia-mono-font-stack) !important;
  font-variant-ligatures: none;
  font-size: 0.75rem;
  font-size: 16px;
}

pluto-input .cm-editor .cm-content {
  padding: 2px 0px;
}

.cm-editor .cm-selectionBackground {
  background: var(--cm-selection-background-blurred);
}
.cm-editor.cm-focused .cm-selectionBackground {
  background: var(--cm-selection-background);
}

.cm-editor {
  background: var(--code-background);
  color: var(--cm-editor-text-color);
}
.cm-editor.cm-focused:not(.__) {
  outline: unset;
}

.cm-editor .cm-gutter {
  min-width: 31px;
  min-height: 23px;
}

.cm-editor .cm-gutters {
  /* background: hsla(46, 90%, 98%, 1); */
  background: transparent;
  border-right: solid 1px hsla(0, 0%, 0%, 0);
  /* height: auto; */
}

pluto-cell.code_differs .cm-editor .cm-gutters {
  /* background: hsla(46, 70%, 88%, 1); */
  background-color: var(--cm-code-differs-gutters-color);
}

.cm-editor .cm-lineNumbers .cm-gutterElement {
  color: transparent;
}

.cm-editor .cm-lineNumbers .cm-gutterElement::after {
  content: "⋅";
  font-size: 0.75rem;
  color: var(--cm-line-numbers-color);
  position: absolute;
  right: 3px;
  pointer-events: none;
}

.cm-editor .cm-lineNumbers .cm-gutterElement:hover {
  color: var(--cm-line-numbers-color);
}

.cm-editor .cm-lineNumbers .cm-gutterElement:hover::after {
  color: transparent;
}

.cm-completionIcon-c_Number::before {
  color: var(--cm-number-color);
}

.cm-completionIcon-c_String::before,
.cm-completionIcon-completion_path::before,
.cm-completionIcon-completion_dict::before {
  color: var(--cm-string-color);
}

.cm-completionIcon-c_Any::before,
pluto-output > assignee {
  color: var(--cm-var-color) !important;
  font-weight: 700;
}

.cm-completionIcon-c_Function::before {
  color: var(--cm-function-color);
}

.cm-completionIcon-c_Array::before {
  color: var(--cm-bracket-color);
}

.cm-completionIcon-c_package::before,
.cm-completionIcon-c_Module::before {
  color: var(--cm-link-color);
}

.cm-editor .cm-activeLine {
  background: unset;
}

.cm-selectionMatch {
  background: none !important;
  text-shadow: 0 0 8px rgba(0, 0, 0, 0.5);
}

@media (prefers-color-scheme: dark) {
  .cm-selectionMatch {
    background: none !important;
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
  }
}

.cm-editor .cm-matchingBracket,
.cm-editor .cm-nonmatchingBracket {
  background-color: unset;
  color: unset;
}
pluto-input:focus-within .cm-editor .cm-matchingBracket {
  color: var(--cm-matchingBracket-color) !important;
  font-weight: 700;
  background-color: var(--cm-matchingBracket-bg-color);
  border-radius: 2px;
}

.cm-editor .cm-placeholder {
  color: var(--cm-placeholder-text-color);
  font-style: italic;
}

.cm-completionMatchedText {
  text-decoration: unset !important;
}

/* Required for awesome-line-wrapping-plugin */
.awesome-wrapping-plugin-the-line {
  --correction: 0px;
  margin-left: calc(var(--indented));
  text-indent: calc(-1 * var(--indented));
}
.awesome-wrapping-plugin-the-line > * {
  /* text-indent apparently cascades... which I think is pretty stupid but this is the fix */
  text-indent: initial;
}
.awesome-wrapping-plugin-the-tabs {
  /* So FOR SOME REASON text-ident is kinda buggy
        but that gets fixed with inline-block...
        But that brought some other problems...
        But margin-left: -1px seems to also do the trick?? */
  /* display: inline-block; */
  white-space: pre;
  vertical-align: top;
  margin-left: -1px;
}

/* PLUTO HOOKS - special styling for cell that runs hook */
/* New feature, new section in the css! */
pluto-cell.hooked_up {
  --pluto-cell-force-color: #00b9ff7a;
}

pluto-cell.hooked_up pluto-trafficlight {
  background-color: var(--pluto-cell-force-color) !important;
}

pluto-cell.hooked_up pluto-input .cm-editor {
  border-color: var(--pluto-cell-force-color);
  border-width: 2px;
  border-left: none;
  border-top: none;
}

pluto-cell.hooked_up > pluto-runarea {
  opacity: 1;
  background-color: var(--pluto-cell-force-color);
}

pluto-cell.hooked_up pluto-runarea > span {
  color: #0000004f;
}

pluto-cell.hooked_up pluto-output {
  border-right: solid 2px;
  border-top: solid 2px;
  border-top-right-radius: 4px;
  border-bottom: solid 2px;
  border-color: var(--pluto-cell-force-color);
}
